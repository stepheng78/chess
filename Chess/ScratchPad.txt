
1. Model - How does the data change? 
	* Why, how and how not (state changes)?  - 
	* business logic(how does our program do things?) 
	* How do the pieces move 
	
2. Controller - Game play loop - how is it driven?
3. View - UI

Ingredients - these things I need. 


========================================================================
Sequence of events to move a piece
========================================================================
1. Piece to move and new board reference supplied by player
2. Retrieve tile piece is currently on. Tile will be mapped to a board reference
3. Retrieve tile of desired new location
4. Check if a piece is already present on new location tile 
    a. if piece exists move current players piece to new location, then update piece that was on tile to a no longer playable state.
    or 
    b. no piece on tile then move players piece to tile
5. Update tile players piece was on, back to default value for an empty tile
  
-------------------------------------------------------------------------


========================================================================
Issues to resolve when moving a piece
========================================================================
1. Are there any pieces in the way of the desired new location?
    a. Does a piece in the way make the move invaild (i.e. is the piece a knight or not)?
2. Is it a valid movement type for the piece type (e.g. rook in straight line only)?
3. Is the location on the board?
4. Start and end locaiton





  
-------------------------------------------------------------------------





/*
    public char FileLimit { get; set; }
    public int RankLimit { get; set; }
         
    List<int>
    IList<int> rankList = new List<int> { 1, 2, 3, 4, 5, 6, 7, 8 };

        
// Contains the letter designator for each file of the board
IList<string> _fileList = new List<string> { "A", "B", "C", "D", "E", "F", "G", "H" };


Cassandra McFaull11:36
5,5 -> 10,10
10-5, 10-5
5x, 5y postively
Cassandra McFaull11:38
10,10 -> 5,5
5-10, 5-10
-5x, -5y
|-5x, -5y|
a2 + b2 = c2
Cassandra McFaull11:39
(x2-x1), (y2-y1)
Cassandra McFaull11:41
0x, 0y
-X
+X
Cassandra McFaull11:43
abs()
clamp()
Cassandra McFaull11:44
clamp(10, 15) = 10
https://docs.microsoft.com/en-us/dotnet/api/system.math.clamp?view=net-5.0
() ->
=>
Cassandra McFaull11:45
Point struct
Cassandra McFaull11:47
https://docs.microsoft.com/en-us/dotnet/api/system.drawing.point?view=net-5.0

raycasting - picking up pieces to inspect

bresenham's line algorithm